<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.springapp.mvc.mapper.CallerMapper" >
  <resultMap id="BaseResultMap" type="com.springapp.mvc.domain.Caller" >
    <id column="callerId" property="callerid" jdbcType="INTEGER" />
    <result column="callerName" property="callername" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="callTime" property="calltime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    callerId, callerName, type, description, callTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.springapp.mvc.domain.CallerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from caller
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from caller
    where callerId = #{callerid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from caller
    where callerId = #{callerid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.springapp.mvc.domain.CallerExample" >
    delete from caller
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.springapp.mvc.domain.Caller" >
    <selectKey resultType="java.lang.Integer" keyProperty="callerid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into caller (callerName, type, description, 
      callTime)
    values (#{callername,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{calltime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.springapp.mvc.domain.Caller" >
    <selectKey resultType="java.lang.Integer" keyProperty="callerid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into caller
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="callername != null" >
        callerName,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="calltime != null" >
        callTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="callername != null" >
        #{callername,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="calltime != null" >
        #{calltime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.springapp.mvc.domain.CallerExample" resultType="java.lang.Integer" >
    select count(*) from caller
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update caller
    <set >
      <if test="record.callerid != null" >
        callerId = #{record.callerid,jdbcType=INTEGER},
      </if>
      <if test="record.callername != null" >
        callerName = #{record.callername,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.calltime != null" >
        callTime = #{record.calltime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update caller
    set callerId = #{record.callerid,jdbcType=INTEGER},
      callerName = #{record.callername,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      callTime = #{record.calltime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.springapp.mvc.domain.Caller" >
    update caller
    <set >
      <if test="callername != null" >
        callerName = #{callername,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="calltime != null" >
        callTime = #{calltime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where callerId = #{callerid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springapp.mvc.domain.Caller" >
    update caller
    set callerName = #{callername,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      callTime = #{calltime,jdbcType=TIMESTAMP}
    where callerId = #{callerid,jdbcType=INTEGER}
  </update>
</mapper>